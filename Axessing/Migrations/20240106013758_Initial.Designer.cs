// <auto-generated />
using System;
using Axessing.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Axessing.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240106013758_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Axessing.Models.Schema.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HexValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("Axessing.Models.Schema.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1116),
                            Description = "Test 1",
                            LastModifiedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1119),
                            Stage = 1,
                            Title = "Test 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1126),
                            Description = "Test 2",
                            LastModifiedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1127),
                            Stage = 2,
                            Title = "Test 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1131),
                            Description = "Test 3",
                            LastModifiedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1132),
                            Stage = 1,
                            Title = "Test 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1134),
                            Description = "Test 4",
                            LastModifiedDate = new DateTime(2024, 1, 6, 2, 37, 58, 622, DateTimeKind.Local).AddTicks(1135),
                            Stage = 0,
                            Title = "Test 4"
                        });
                });

            modelBuilder.Entity("LabelTicket", b =>
                {
                    b.Property<int>("LabelsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TicketsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LabelsId", "TicketsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("LabelTicket");
                });

            modelBuilder.Entity("LabelTicket", b =>
                {
                    b.HasOne("Axessing.Models.Schema.Label", null)
                        .WithMany()
                        .HasForeignKey("LabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Axessing.Models.Schema.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
